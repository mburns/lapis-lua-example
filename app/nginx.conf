worker_processes ${{NUM_WORKERS}};
error_log stderr notice;
daemon off;
pid logs/nginx.pid;

events {
  worker_connections 1024;
}

http {
  include mime.types;

	client_max_body_size ${{BODY_SIZE}};
	client_body_buffer_size ${{BODY_SIZE}};

	lua_package_path "${{LUA_PATH}};;";

	init_worker_by_lua_block {
		local uuid = require "resty.jit-uuid"
		uuid.seed()
	}

  init_by_lua_block {
		require "lfs"
		require "lpeg"
		require "ltn12"
		require "markdown"
		require "mime"
		require "socket"
  }

  server {
    listen ${{PORT}};
    lua_code_cache ${{CODE_CACHE}};

    location / {
      default_type text/html;
      content_by_lua_block {
        require("lapis").serve("app")
      }
    }

    location /proxy {
        internal;
        rewrite_by_lua "
          local req = ngx.req

          for k,v in pairs(req.get_headers()) do
            if k ~= 'content-length' then
              req.clear_header(k)
            end
          end

          if ngx.ctx.headers then
            for k,v in pairs(ngx.ctx.headers) do
              req.set_header(k, v)
            end
          end
        ";

        resolver 8.8.8.8;
        proxy_http_version 1.1;
        proxy_pass $_url;
    }

    location /static/ {
      alias static/;
    }

    location /favicon.ico {
      alias static/favicon.ico;
    }

    location /robots.txt {
      alias static/robots.txt;
    }
  }
}
